name: Package and Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
        
      - name: Get package version
        run: echo ::set-output name=version::$(jq -r '.version' release/app/package.json)

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: npm run package

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ format('D2RMM {0}.zip', steps.get_version.outputs.version) }}
          path: ${{ format('release/build/D2RMM {0}.zip',  steps.get_version.outputs.version) }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: ${{ format('D2RMM {0}', steps.get_version.outputs.version) }}
          draft: false
          prerelease: false

      - name: Attach artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ format('release/build/D2RMM {0}.zip',  steps.get_version.outputs.version) }}
          asset_name: ${{ format('D2RMM {0}.zip', steps.get_version.outputs.version) }}
          asset_content_type: application/zip

{
  "name": "d2rmm",
  "description": "A mod manager for Diablo II: Resurrected.",
  "scripts": {
    "build": "concurrently \"npm run build:main\" \"npm run build:renderer\"",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "build:casclib": "\"C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/MSBuild/Current/Bin/MSBuild.exe\" ./node_modules/CascLib/CascLib_dll.vcxproj /p:Configuration=Release /p:Platform=x64 && copy .\\node_modules\\CascLib\\bin\\CascLib_dll\\x64\\Release\\CascLib.dll .\\tools\\",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "lint": "cross-env NODE_ENV=development eslint ./src/ --ext .js,.jsx,.ts,.tsx --cache --cache-strategy metadata",
    "package": "ts-node ./.erb/scripts/clean.js dist && npm run build --no-warnings && electron-builder build --publish never",
    "postinstall": "ts-node .erb/scripts/check-native-dep.js && electron-builder install-app-deps && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts && opencollective-postinstall",
    "start": "ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer",
    "start:main": "cross-env NODE_ENV=development electron -r ts-node/register/transpile-only ./src/main/main.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "test": "jest",
    "prepare": "husky install",
    "docs": "typedoc"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "*.json,.{eslintrc,prettierrc}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "build": {
    "productName": "D2RMM",
    "appId": "com.lokhvitsky.D2RMM",
    "artifactName": "${productName} ${version}.${ext}",
    "asar": true,
    "asarUnpack": [
      "**\\*.{node,dll,wasm}",
      "**\\node_modules\\@jitl\\quickjs-wasmfile-release-asyncify\\dist\\{index.js,emscripten-module.mjs,emscripten-module.wasm}"
    ],
    "win": {
      "target": [
        "zip"
      ]
    },
    "protocols": {
      "name": "nxm",
      "schemes": [
        "nxm"
      ]
    },
    "files": [
      "dist",
      "node_modules",
      "package.json"
    ],
    "directories": {
      "app": "release/app",
      "buildResources": "assets",
      "output": "release/build/"
    },
    "extraResources": [
      {
        "from": "assets",
        "to": "assets",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "node_modules/source-map/lib",
        "to": "app.asar.unpacked/dist/main",
        "filter": [
          "mappings.wasm"
        ]
      }
    ],
    "extraFiles": [
      {
        "from": "extras",
        "to": "./",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "tools",
        "to": "tools",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "mods.empty",
        "to": "mods",
        "filter": [
          "**/*"
        ]
      }
    ],
    "afterSign": "./afterSign.js",
    "publish": {
      "provider": "github",
      "owner": "olegbl",
      "repo": "olegbl"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/olegbl/d2rmm.git"
  },
  "author": {
    "name": "Oleg Lokhvitsky",
    "email": "olegbl@gmail.com",
    "url": "https://github.com/olegbl/d2rmm"
  },
  "contributors": [],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/olegbl/d2rmm/issues"
  },
  "keywords": [],
  "homepage": "https://github.com/olegbl/d2rmm#readme",
  "devDependencies": {
    "@pmmmwh/react-refresh-webpack-plugin": "0.5.15",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.1",
    "@testing-library/jest-dom": "^5.16.1",
    "@testing-library/react": "^12.1.2",
    "@trivago/prettier-plugin-sort-imports": "^4.3.0",
    "@types/decompress": "^4.2.7",
    "@types/ffi-napi": "^4.0.5",
    "@types/jest": "^27.0.3",
    "@types/node": "^20.0.0",
    "@types/react": "^18.0.0",
    "@types/react-beautiful-dnd": "^13.1.2",
    "@types/react-dom": "^18.0.0",
    "@types/react-test-renderer": "^18.0.0",
    "@types/react-virtualized-auto-sizer": "^1.0.4",
    "@types/react-window": "^1.8.8",
    "@types/ref-napi": "^3.0.4",
    "@types/terser-webpack-plugin": "^5.0.4",
    "@types/uuid": "^10.0.0",
    "@types/webpack-env": "^1.16.3",
    "@typescript-eslint/eslint-plugin": "^5.8.1",
    "@typescript-eslint/parser": "^5.8.1",
    "CascLib": "https://github.com/ladislav-zezula/CascLib.git",
    "browserslist-config-erb": "^0.0.3",
    "chalk": "^4.1.2",
    "concurrently": "^6.5.1",
    "core-js": "^3.20.1",
    "cross-env": "^7.0.3",
    "css-loader": "^6.5.1",
    "css-minimizer-webpack-plugin": "^3.3.1",
    "detect-port": "^1.3.0",
    "dts-bundle-webpack": "^1.0.2",
    "electron": "16.0.5",
    "electron-builder": "22.13.1",
    "electron-devtools-installer": "^3.2.0",
    "electron-notarize": "^1.1.1",
    "electron-rebuild": "^3.2.5",
    "eslint": "^8.5.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-erb": "^4.0.3",
    "eslint-import-resolver-typescript": "^2.5.0",
    "eslint-import-resolver-webpack": "^0.13.2",
    "eslint-plugin-compat": "^4.0.0",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-jest": "^25.3.2",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-no-relative-import-paths": "^1.5.5",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-react": "^7.28.0",
    "eslint-plugin-react-hooks": "^4.3.0",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^7.0.4",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^27.4.5",
    "lint-staged": "^12.1.4",
    "mini-css-extract-plugin": "^2.4.5",
    "opencollective-postinstall": "^2.0.3",
    "prettier": "^3.3.2",
    "quickjs-emscripten": "^0.29.2",
    "react-refresh": "^0.14.2",
    "react-refresh-typescript": "^2.0.9",
    "react-test-renderer": "^18.0.0",
    "rimraf": "^3.0.2",
    "sass": "^1.45.1",
    "sass-loader": "^12.4.0",
    "style-loader": "^3.3.1",
    "terser-webpack-plugin": "^5.3.0",
    "ts-loader": "^9.2.6",
    "ts-node": "^10.4.0",
    "typescript": "^5.0",
    "url-loader": "^4.1.1",
    "webpack": "^5.65.0",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.9.1",
    "webpack-dev-server": "^4.7.1",
    "webpack-merge": "^5.8.0"
  },
  "dependencies": {
    "@emotion/react": "^11.7.1",
    "@emotion/styled": "^11.6.0",
    "@mui/icons-material": "^5.10.3",
    "@mui/lab": "^5.0.0-alpha.170",
    "@mui/material": "^5.15.19",
    "decompress": "^4.2.1",
    "electron-debug": "^3.2.0",
    "electron-log": "^5.1.5",
    "electron-updater": "^4.6.5",
    "history": "^5.2.0",
    "json5": "^2.2.0",
    "mui-color-input": "^2.0.3",
    "mui-nested-menu": "^3.4.0",
    "node-addon-api": "^4.3.0",
    "react": "^18.0.0",
    "react-beautiful-dnd": "^13.1.1",
    "react-dom": "^18.0.0",
    "react-router-dom": "^6.2.1",
    "react-virtualized-auto-sizer": "^1.0.24",
    "react-window": "^1.8.10",
    "regenerator-runtime": "^0.13.9",
    "source-map": "^0.7.4",
    "typedoc": "^0.25.13",
    "uuid": "^10.0.0"
  },
  "devEngines": {
    "node": ">=14.x",
    "npm": ">=7.x"
  },
  "browserslist": [],
  "prettier": {
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".eslintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ],
    "singleQuote": true,
    "plugins": [
      "@trivago/prettier-plugin-sort-imports"
    ],
    "importOrder": [
      "^bridge/",
      "^main/",
      "^renderer/",
      "<THIRD_PARTY_MODULES>",
      "react",
      "@mui",
      "^../",
      "^./"
    ]
  }
}
